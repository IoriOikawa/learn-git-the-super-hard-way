#!/bin/bash

set -euo pipefail

exec 3>&1 4>&2

STATE=TEXT
BUFFER=
LF=$'\n'

(
while [ "$#" -gt 1 ]; do
    cat "$1"
    shift
done
echo 'ENABLE-ECHO'
([ "$#" -gt 0 ] && cat "$1") || true
) | while IFS= read -r line; do
    if [ "$line" = 'ENABLE-ECHO' ]; then
        printf 'printf "%%s\\n" %q \n' "$line"
        printf 'printf "%%s\\n" %q >&2 \n' "$line"
        continue
    fi
    case "$STATE" in
        TEXT)
            printf 'printf "%%s\\n" %q \n' "$line"
            if [ "$line" = '```bash' ]; then
                echo '('
                STATE=CODE
            fi
            ;;
        CODE)
            if [ "$line" = '```' ]; then
                printf '%s' "$BUFFER"
                BUFFER=
                echo ')'
                printf 'printf "%%s\\n" %q \n' "$line"
                STATE=TEXT
            elif [ "$line" = '' ]; then
                printf 'printf "%%s\\n" %q \n' "$line"
            else
                printf 'printf "%%s\\n" %q \n' "$line"
                L="${line%%#*}"
                if [ -n "$L" ]; then
                    if ! printf '%s' "$L" | grep -q -e '^cd ' -e '\\$' -e ';$'; then
                        OUT="$L"' | sed "s/^/# /; s/^# $/#/"'"$LF"
                    else
                        OUT="$L$LF"
                    fi
                    if ! printf '%s' "$L" | grep -q -e '\\$' -e ';$' -e '<<EOF\>'; then
                        printf '%s' "$BUFFER"
                        BUFFER=
                        printf '%s' "$OUT"
                    elif ! printf '%s' "$L" | grep -q -e '<<EOF\>'; then
                        BUFFER="$BUFFER$OUT"
                    else
                        STATE=LITERAL
                        BUFFER="$BUFFER$OUT"
                    fi
                else
                    printf '%s' "$BUFFER"
                    BUFFER=
                fi
            fi
            ;;
        LITERAL)
            printf 'printf "%%s\\n" %q \n' "$line"
            BUFFER="$BUFFER$line$LF"
            if [ "$line" = 'EOF' ]; then
                STATE=CODE
                printf '%s' "$BUFFER"
                BUFFER=
            fi
            ;;
    esac
done | docker run --rm -i learn-git-generate 1> >(
    ECHO=
    while IFS= read -r line; do
        if [ "$line" = 'ENABLE-ECHO' ]; then
            ECHO=YES
            continue
        fi
        [ -n "$ECHO" ] && printf '%s\n' "$line" >&3
        [ -n "$ECHO" ] && printf '%s\n' "$line" >&4
    done
) 2> >(
    ECHO=
    while IFS= read -r line; do
        if [ "$line" = 'ENABLE-ECHO' ]; then
            ECHO=YES
            continue
        fi
        [ -n "$ECHO" ] && printf '# %s\n' "$line" >&3
        [ -n "$ECHO" ] && printf '# \e[01;31m%s\e[0m\n' "$line" >&4
    done
)
